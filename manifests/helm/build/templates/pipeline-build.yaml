apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.app.name }}-build
  labels:
    type: pipeline
    backstage.io/kubernetes-id: {{ .Values.app.name }}
spec:
  params:
    - name: source-repo
      description: source repo that contains the application code
      type: string
      default: {{ .Values.git.repo }}
    - name: source-branch
      description: source branch to build from
      default: {{ .Values.git.branch }}
      type: string
    - name: output-image
      description: reference of the image that will get created
      default: {{ include "image.dev-url" . }}
      type: string
    - name: git-host
      type: string
    - name: git-owner
      type: string
    - name: component-id
      type: string
    - name: common-password-secret
      type: string
    - name: stackrox-endpoint
      type: string
    - name: stackrox-secret
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.source-repo)
        - name: revision
          value: $(params.source-branch)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-folder
{{- if eq .Values.git.verify_commits "enabled" }}
    - name: verify-commit
      params:
      - name: certificate-identity
        value: $(params.certificate-identity)
      - name: oidc-issuer
        value: $(params.oidc-issuer)
      - name: rekor-url
        value: $(params.rekor-url)
      - name: tuf-mirror
        value: $(params.tuf-mirror)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: verify-commit
      workspaces:
        - name: repository
          workspace: source-folder
    - name: package-serving
      runAfter:
        - verify-commit
{{- else }}
    - name: package-serving
      runAfter:
        - git-clone
{{- end }}
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
      - name: IMAGE
        value: $(params.output-image)-serving-tests
      - name: DOCKERFILE
        value: ./Containerfile-serving
      - name: BUILD_EXTRA_ARGS
        value: --target=serving
      workspaces:
      - name: source
        workspace: source-folder
{{- if eq .Values.git.verify_commits "enabled" }}
    - name: package-training
      runAfter:
        - verify-commit
{{- else }}
    - name: package-training
      runAfter:
        - git-clone
{{- end }}
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
      - name: IMAGE
        value: $(params.output-image)-training-tests
      - name: DOCKERFILE
        value: ./Containerfile-training
      - name: BUILD_EXTRA_ARGS
        value: --target=training
      workspaces:
      - name: source
        workspace: source-folder

    - name: serving-unit-tests
      taskRef:
        kind: Task
        name: run-container-tests
      params:
      - name: IMAGE
        value: $(params.output-image)-serving-tests
      runAfter:
      - package-serving

    - name: acs-image-check-serving
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: image
        value: {{ include "sha-image.dev-url" . }}-serving-tests
      - name: insecure-skip-tls-verify
        value: "true"
      - name: image_digest
        value: $(tasks.package-serving.results.IMAGE_DIGEST)
      runAfter:
      - package-serving
      taskRef:
        kind: Task
        name: acs-image-check
      workspaces:
      - name: reports
        workspace: reports
    - name: acs-image-scan-serving
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: image
        value: {{ include "sha-image.dev-url" . }}-serving-tests
      - name: insecure-skip-tls-verify
        value: "true"
      - name: image_digest
        value: $(tasks.package-serving.results.IMAGE_DIGEST)
      runAfter:
      - package-serving
      taskRef:
        kind: Task
        name: acs-image-scan
      workspaces:
      - name: reports
        workspace: reports
    - name: acs-deploy-check-serving
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: git_host
        value: $(params.git-host)
      - name: git_owner
        value: $(params.git-owner)
      - name: component_id
        value: $(params.component-id)
      - name: common_password_secret
        value: $(params.common-password-secret)
      - name: insecure-skip-tls-verify
        value: "true"
      taskRef:
        kind: Task
        name: acs-deploy-check
      runAfter:
      - package-serving
      workspaces:
      - name: reports
        workspace: reports

    - name: acs-image-check-training
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: image
        value: {{ include "sha-image.dev-url" . }}-training-tests
      - name: insecure-skip-tls-verify
        value: "true"
      - name: image_digest
        value: $(tasks.package-training.results.IMAGE_DIGEST)
      runAfter:
      - package-training
      taskRef:
        kind: Task
        name: acs-image-check
      workspaces:
      - name: reports
        workspace: reports
    - name: acs-image-scan-training
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: image
        value: {{ include "sha-image.dev-url" . }}-training-tests
      - name: insecure-skip-tls-verify
        value: "true"
      - name: image_digest
        value: $(tasks.package-training.results.IMAGE_DIGEST)
      runAfter:
      - package-training
      taskRef:
        kind: Task
        name: acs-image-scan
      workspaces:
      - name: reports
        workspace: reports
    - name: acs-deploy-check-training
      params:
      - name: rox_central_endpoint
        value: $(params.stackrox-endpoint)
      - name: rox_api_token
        value: $(params.stackrox-secret)
      - name: git_host
        value: $(params.git-host)
      - name: git_owner
        value: $(params.git-owner)
      - name: component_id
        value: $(params.component-id)
      - name: common_password_secret
        value: $(params.common-password-secret)
      - name: insecure-skip-tls-verify
        value: "true"
      taskRef:
        kind: Task
        name: acs-deploy-check
      runAfter:
      - package-training
      workspaces:
      - name: reports
        workspace: reports

    - name: training-unit-tests
      taskRef:
        kind: Task
        name: run-container-tests
      params:
      - name: IMAGE
        value: $(params.output-image)-training-tests
      runAfter:
      - package-training

    - name: copy-serving-image-latest
      params:
        - name: srcImageURL
          value: 'docker://$(params.output-image)-serving-tests:latest'
        - name: destImageURL
          value: 'docker://$(params.output-image)-serving:latest'
        - name: srcTLSverify
          value: 'false'
        - name: destTLSverify
          value: 'false'
      taskRef:
        kind: ClusterTask
        name: skopeo-copy
      runAfter:
        - serving-unit-tests
        - training-unit-tests
        - acs-image-check-serving
        - acs-image-scan-serving
        - acs-deploy-check-serving
        - acs-image-check-training
        - acs-image-scan-training
        - acs-deploy-check-training
      workspaces:
        - name: images-url
          workspace: images-url
    - name: copy-training-image-latest
      params:
        - name: srcImageURL
          value: 'docker://$(params.output-image)-training-tests:latest'
        - name: destImageURL
          value: 'docker://$(params.output-image)-training:latest'
        - name: srcTLSverify
          value: 'false'
        - name: destTLSverify
          value: 'false'
      taskRef:
        kind: ClusterTask
        name: skopeo-copy
      runAfter:
        - serving-unit-tests
        - training-unit-tests
        - acs-image-check-serving
        - acs-image-scan-serving
        - acs-deploy-check-serving
        - acs-image-check-training
        - acs-image-scan-training
        - acs-deploy-check-training
      workspaces:
        - name: images-url
          workspace: images-url

    - name: restart-dev
      runAfter:
      - copy-serving-image-latest
      - copy-training-image-latest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      params:
        - name: SCRIPT
          value: "oc rollout restart deploy/{{ .Values.app.name }}-dev-app"
  results:
    - name: CHAINS-GIT_URL
      value: "$(tasks.git-clone.results.url)"
    - name: CHAINS-GIT_COMMIT
      value: "$(tasks.git-clone.results.commit)"
  workspaces:
    - name: source-folder
    - name: docker-config
    - name: reports
    - name: images-url
