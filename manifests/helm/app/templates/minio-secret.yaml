---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-pipelines-minio-{{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: job-pipelines-minio-{{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-pipelines-minio-{{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
subjects:
  - kind: ServiceAccount
    name: job-pipelines-minio-{{ .Release.Namespace }}
    namespace: odh-model-registries
  - kind: ServiceAccount
    name: job-pipelines-minio-{{ .Release.Namespace }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: job-pipelines-minio-{{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-copy-secret-{{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  template:
    spec:
      containers:
        - name: minion
          image: registry.redhat.io/openshift4/ose-cli
          command:
            - /bin/bash
            - -ec
            - if [[ ! $(oc get secret -n {{ .Release.Namespace }} --ignore-not-found aws-connection-my-storage) == *NAME* ]]; then oc get secret aws-connection-my-storage -n minio -o yaml | grep -v '^\s*namespace:\s' | oc apply -n {{ .Release.Namespace }} -f -; fi
      restartPolicy: Never
      serviceAccount: job-pipelines-minio-{{ .Release.Namespace }}
      serviceAccountName: job-pipelines-minio-{{ .Release.Namespace }}
  backoffLimit: 4
